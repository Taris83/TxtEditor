<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>